drop dataverse custord if exists;

create dataverse custord;

use dataverse custord;

create type StreetType as closed {
  number: int32?,
  name: string
}

create type AddressType as open {
  street: StreetType,
  city: string,
  state: string,
  zip: int16
}

create type CustomerType as closed {
  cid: int32, 
  name: string,
  age: int32?,
  address: AddressType?,
  interests: {{string}},
  children: [ {
             name : string,
             dob : string
             } ]
}

create type OrderType as open {
  oid: int32,
  cid: int32,
  orderstatus: string,
  orderpriority: string,
  clerk: string,
  total: float,
  items: [ {
       number: int64,
       storeIds: {{int8}} 
       } ]
}

create nodegroup group1  if not exists on nc1, nc2;

create dataset Customers(CustomerType)
  partitioned by key cid, name on group1;

load dataset Customers 
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/metadata/customerData.json"),("format"="adm"));
        
create dataset Orders(OrderType)
  partitioned by key oid on group1;

load dataset Orders 
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/metadata/orderData.json"),("format"="adm"));

create index ordCustId if not exists on Orders(cid);

create index custName if not exists on Customers(name, cid);

create index ordClerkTotal if not exists on Orders(clerk, total);
  
