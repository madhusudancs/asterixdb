/*
 * Description    : Equi joins two datasets, DBLP and CSX, based on their title.
 *                  DBLP has a secondary btree index on title, and given the 'indexnl' hint 
 *                  we expect the join to be transformed into an indexed nested-loop join.
 * Success        : Yes
 */

drop dataverse test if exists;
create dataverse test;
use dataverse test;

create type DBLPType as closed {
  id: int32, 
  dblpid: string,
  title: string,
  authors: string,
  misc: string
}

create type CSXType as closed {
  id: int32, 
  csxid: string,
  title: string,
  authors: string,
  misc: string
}

create dataset DBLP(DBLPType) partitioned by key id;
create dataset CSX(CSXType) partitioned by key id;

load dataset DBLP 
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/pub-small/dblp-small-id.txt"),("format"="delimited-text"),("delimiter"=":"));

load dataset CSX
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/pub-small/csx-small-id.txt"),("format"="delimited-text"),("delimiter"=":"));

create index title_index on DBLP(authors);

write output to nc1:"rttest/index-join_btree-secondary-equi-join.adm";

for $a in dataset('DBLP')
for $b in dataset('CSX')
where $a.authors /*+ indexnl */ = $b.authors
order by $a.id, $b.id
return {"aid": $a.id, "bid": $b.id, "authors": $a.authors}