drop dataverse test if exists;

create dataverse test;

use dataverse test;
create type AddressType as open {
  number: int32, 
  street: string,
  city: string
}

create type CustomerType as closed {
  cid: int32, 
  name: string,
  cashBack: int32,
  age: int32?,
  address: AddressType?,
  lastorder: {
    oid: int32,
    total: float
  }
}


create type OrderType as open {
  oid: int32,
  cid: int32,
  orderstatus: string,
  orderpriority: string,
  clerk: string,
  total: float,
  items: [int32]
}

 
create external dataset Customers(CustomerType)
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/nontagged/customerData.json"),("format"="adm"));
        
create external dataset Orders(OrderType)
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/nontagged/orderData.json"),("format"="adm"));

write output to nc1:"rttest/custord_join_q_03.adm";
      

for $c in dataset('Customers')
for $o in dataset('Orders')
let $rec := $c.lastorder
let $ol := [$o.oid, $rec.oid, $o.cid]
let $ul := {{$o.oid, $rec.oid, $o.cid}}
where $c.cid = $o.cid
order by $c.name, $o.total
return {"cust_name":$c.name, "order_total": $o.total, "orderedlist": $ol, "unorderedlist": $ul, "ol_item1": $ol[0], "ol_item2": $ol[1], "ol_item5": $ol[4], "ul_item1": $ul[?]} 
