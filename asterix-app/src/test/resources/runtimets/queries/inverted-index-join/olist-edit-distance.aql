/*
 * Description    : Fuzzy joins two datasets, Customers and Customers2, based on the edit-distance function of their interest lists.
 *                  Customers has a keyword index on interests, and we expect the join to be transformed into an indexed nested-loop join.
 * Success        : Yes
 */

drop dataverse test if exists;
create dataverse test;
use dataverse test;

create type AddressType as open {
  number: int32, 
  street: string,
  city: string
}

create type CustomerType as open {
  cid: int32, 
  name: string,
  age: int32?,
  address: AddressType?,
  interests: [string],
  children: [ { name: string, age: int32? } ]
}

create dataset Customers(CustomerType) partitioned by key cid;

create dataset Customers2(CustomerType) partitioned by key cid;

load dataset Customers 
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/semistructured/co1k_olist/customer.adm"),("format"="adm"));

load dataset Customers2
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/semistructured/co1k_olist/customer.adm"),("format"="adm"));

create index interests_index on Customers(interests) type keyword;

write output to nc1:"rttest/inverted-index-join_olist-edit-distance.adm";

for $a in dataset('Customers')
for $b in dataset('Customers2')
where len($a.interests) > 2 and len($b.interests) > 2 and edit-distance($a.interests, $b.interests) <= 1 and $a.cid < $b.cid
order by $a.cid, $b.cid
return { "arec": $a, "brec": $b }